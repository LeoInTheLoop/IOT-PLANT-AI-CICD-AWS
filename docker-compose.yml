services:
  client:
    build:
      context: ./client
    ports:
      - "3000:80"
    depends_on:
      server:
        condition: service_healthy

  server:
    build: ./server
    ports:
      - "5001:5001"
    volumes:
      - ./server/trained_models:/app/trained_models
    environment:
    # --------------------------------------------------》
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/Machine_data
    command: sh -c "python init_dbData.py && uvicorn main:app --host 0.0.0.0 --port 5001"

    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5001/health" ]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: Machine_data
      DB_RESET: true # 可选，用于触发数据库重建逻辑
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data:rw

volumes:
  postgres_data:
