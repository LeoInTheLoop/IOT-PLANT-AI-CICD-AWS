
services:
  client:
    build:
      context: ./client
    ports:
      - "3000:80"
    depends_on:
      server:
        condition: service_healthy

  server:
    build:
      context: ./server
    ports:
      - "5001:5000"
    volumes:
      - ./server/trained_models:/app/trained_models
    environment:
      - DATABASE_URL=sqlite:///app/database.db
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: sensor_data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 30s
      retries: 5
      start_period: 10s
      timeout: 10s
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data: